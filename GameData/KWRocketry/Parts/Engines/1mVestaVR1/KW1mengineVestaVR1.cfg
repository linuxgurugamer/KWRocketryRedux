PART
{
	
	name = KW1mengineVestaVR1
	module = Part
	author = KW Rocketry
	
	MODEL
	{
		model = KWRocketry/Parts/Engines/1mVestaVR1/KW_1mEngine_VestaVR1_M
		scale = 1, 1, 1
	}
	scale = 0.1
	
	MODEL
	{
		model = KWRocketry/Parts/Fairings/UnifiedFairings/KW_Auto_1mVestaShroud
		scale = 1, 1, 1
	}
	
	
	node_stack_top = 0.0, 5.0, 0.0, 0.0, 1.0, 0.0, 1
	node_stack_top2 = 0.0, 5.0, 0.0, 0.0, 1.0, 0.0, 1
	node_stack_bottom = 0.0, -7.38, 0.0, 0.0, -1.0, 0.0, 1
	
	
	
	fx_exhaustFlame_blue_small = 0.0, -9, 0.0, 0.0, 1.0, 0.0, running
	fx_exhaustLight_blue = 0.0, -9, 0.0, 0.0, 0.0, 1.0, running
	
	
	TechRequired = generalRocketry
	entryCost = 1800
	cost = 590
	category = Engine
	subcategory = 0
	title = KW Rocketry Vesta VR-1
	manufacturer = KW Rocketry
	description = A small, efficient upper stage motor for probe and satellite launch vehicles.
	
	attachRules = 1,0,1,1,0
	
	mass = 0.75
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 8
	maxTemp = 2000
	emissiveConstant = 0.8
	
	breakingForce = 1200
	breakingTorque = 1200
	
	stagingIcon = LIQUID_ENGINE
	
	tags = [kwrock maneuver manoeuvre orbital propuls rocket (vesta vacuum
	
	bulkheadProfiles = size1
	
	EFFECTS
	{
		running_closed
		{
			AUDIO
			{
				channel = Ship
				clip = sound_rocket_hard
				volume = 0.0 0.0
				volume = 0.8 0.8
				pitch = 0.0 0.2
				pitch = 1.5 1.5
				loop = true
			}
			PREFAB_PARTICLE
			{
				name = Smoke
				prefabName = fx_smokeTrail_light
				transformName = OldFXTransform
				emission = 0.0 0.0
				emission = 0.05 0.0
				emission = 0.075 0.25
				emission = 1.0 1.25
				speed = 0.0 0.25
				speed = 1.0 1.0
				localOffset = 0, 0, 0
			}
			PREFAB_PARTICLE
			{
				name = Flame
				prefabName = fx_exhaustFlame_blue
				transformName = OldFXTransform
				emission = 0.0 0.0
				emission = 0.05 0.0
				emission = 0.055 0.15
				emission = 0.6 0.8
				speed = 0.0 0.5
				speed = 1.0 1.2
			}
		}
		engage
		{
			AUDIO
			{
				channel = Ship
				clip = KWRocketry/Soundbank/sound_liq7
				volume = 0.8
				pitch = 1.0
				loop = false
			}
		}
		flameout
		{
			PREFAB_PARTICLE
			{
				prefabName = fx_exhaustSparks_flameout_2
				transformName = NozzleTransform
				oneShot = true
			}
			AUDIO
			{
				channel = Ship
				clip = sound_explosion_low
				volume = 1.0
				pitch = 2.0
				loop = false
			}
		}
	}
	
	MODULE
	{
		name = ModuleEnginesFX
		thrustVectorTransformName = NozzleTransform
		engineID = KWVR1LE
		runningEffectName = running_closed
		exhaustDamage = True
		ignitionThreshold = 0.1
		minThrust = 0
		maxThrust = 90
		heatProduction = 90
		PROPELLANT
		{
			name = LiquidFuel
			ratio = 0.9
			DrawGauge = True
		}
		PROPELLANT
		{
			name = Oxidizer
			ratio = 1.1
		}
		atmosphereCurve
		{
			key = 0 335
			key = 1 260
			key = 3 0.001
		}
		
	}
	
	
	MODULE
	{
		name = ModuleGimbal
		gimbalTransformName = NozzleTransform
		gimbalRange = 2
	}
	
	MODULE
	{
		name = FXModuleAnimateThrottle
		useHeat = True
		lerpMin = 0
		lerpMax = 650
		lerpOffset = -150
		lerpPow = 0.875
		lerpOuterScalar = 1
		lerpInnerScalar = 1
			
		animationName = GriffonEmissiveAnim
		responseSpeed = 0.001
		dependOnEngineState = True
		dependOnThrottle = True
	}
	
	MODULE
	{
		name = ModuleAlternator
		RESOURCE
		{
			name = ElectricCharge
			rate = 5
		}
	}
	
	MODULE
	{
		name = ModuleJettison
		jettisonName = 1mVestaShroud
		bottomNodeName = bottom
		isFairing = True
		jettisonedObjectMass = 0.1
		jettisonForce = 5
		jettisonDirection = 0 0 1
		
	}
	
	MODULE
	{
		name = ModuleSurfaceFX
		thrustProviderModuleIndex = 0
		fxMax = 0.3
		maxDistance = 30
		falloff = 1.5
		thrustTransformName = NozzleTransform
	}
	
	RESOURCE
	{
		name = ElectricCharge
		amount = 0
		maxAmount = 0
		isTweakable = false
		hideFlow = true
	}
	fx_smokeTrail_light = 0.0, -9, 0.0, 0.0, 1.0, 0.0, running
	fx_exhaustSparks_flameout = 0.0, -9, 0.0, 0.0, 1.0, 0.0, flameout
	MODULE
	{
		name = ModuleTestSubject
		useStaging = True
		useEvent = True
		situationMask = 127
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 8000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 2000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 4000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 1000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 2000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = GT
			value = 0
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 300000
			situationMask = 16
			body = _NotSun
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 600000
			situationMask = 32
			body = _NotSun
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 0
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 600
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 300
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 1200
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 600
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 2500
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 200
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 100
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 100
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 50
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 50
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 20
			prestige = Exceptional
		}
	}
}
